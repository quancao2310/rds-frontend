# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - group: 'AWS Secrets'
  - name: npm_config_cache
    value: $(Pipeline.Workspace)/.npm

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

- task: Cache@2
  inputs:
    key: 'npm | "$(Agent.OS)" | package-lock.json'
    restoreKeys: |
      npm | "$(Agent.OS)"
    path: $(npm_config_cache)
  displayName: Cache npm packages

- script: npm ci
  displayName: 'Install npm packages'

- script: npm run build
  displayName: 'Build project'

- task: CopyFiles@2
  inputs:
    Contents: 'build/**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: Copy Files to Artifact Staging Directory

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: Publish Build Artifacts

- task: AWSCLI@1
  inputs:
    awsCommand: 's3'
    awsSubCommand: 'sync'
    awsArguments: 'build s3://$(AWS_S3_BUCKET) --delete'
  env:
    AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
    AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
    AWS_REGION: $(AWS_REGION)
    AWS_S3_BUCKET: $(AWS_S3_BUCKET)
  displayName: Upload to S3

- task: AWSCLI@1
  inputs:
    awsCommand: 'cloudfront'
    awsSubCommand: 'create-invalidation'
    awsArguments: '--distribution-id $(AWS_CLOUDFRONT_DISTRIBUTION_ID) --paths "/*"'
  env:
    AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
    AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
    AWS_REGION: $(AWS_REGION)
    AWS_CLOUDFRONT_DISTRIBUTION_ID: $(AWS_CLOUDFRONT_DISTRIBUTION_ID)
  displayName: Invalidate CloudFront cache
